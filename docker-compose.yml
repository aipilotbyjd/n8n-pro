services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: n8n_clone
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  kafka:
    image: bitnami/kafka:3.3
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_BROKER_ID=0
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
    volumes:
      - kafka_data:/bitnami/kafka

  api:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.api
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=n8n_clone
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
      - METRICS_ENABLED=true
      - METRICS_HOST=0.0.0.0
      - METRICS_PORT=9090
      - API_HOST=0.0.0.0
      - API_PORT=8080

  worker:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.worker
    depends_on:
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=n8n_clone
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
      - WORKER_ENABLED=true

  scheduler:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.scheduler
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=n8n_clone
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
      - SCHEDULER_ENABLED=true

  webhook:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.webhook
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=n8n_clone
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_SSL_MODE=disable
      - KAFKA_BROKERS=kafka:9092
      - WEBHOOK_ENABLED=true
      - WEBHOOK_HOST=0.0.0.0
      - WEBHOOK_PORT=8081

volumes:
  postgres_data:
  kafka_data:

networks:
  n8n-pro-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: n8n-pro-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: n8n_clone
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./deployments/docker/postgres-init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - n8n-pro-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d n8n_clone -h localhost -p 5432"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: n8n-pro-redis
    restart: unless-stopped
    command: redis-server --requirepass redis_password --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - n8n-pro-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redis_password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Apache Kafka
  kafka:
    image: bitnami/kafka:3.6
    container_name: n8n-pro-kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    environment:
      # KRaft settings
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      # Performance settings
      KAFKA_CFG_NUM_NETWORK_THREADS: 8
      KAFKA_CFG_NUM_IO_THREADS: 8
      KAFKA_CFG_LOG_RETENTION_HOURS: 168
      KAFKA_CFG_LOG_RETENTION_BYTES: 1073741824
      KAFKA_CFG_LOG_SEGMENT_BYTES: 1073741824
      KAFKA_CFG_NUM_PARTITIONS: 3
      KAFKA_CFG_DEFAULT_REPLICATION_FACTOR: 1
      # JVM settings
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms512m"
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - n8n-pro-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # API Service
  api:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.api
    container_name: n8n-pro-api
    restart: unless-stopped
    ports:
      - "8080:8080"
      - "9090:9090"  # Metrics port
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Application
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: info
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: n8n_clone
      DB_USER: user
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      DB_MAX_OPEN_CONNECTIONS: 25
      DB_MAX_IDLE_CONNECTIONS: 5
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DATABASE: 0
      
      # Kafka
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: n8n-workflows
      KAFKA_GROUP_ID: n8n-workers
      
      # API
      API_HOST: 0.0.0.0
      API_PORT: 8080
      API_ENABLE_CORS: true
      API_CORS_ALLOWED_ORIGINS: "*"
      
      # Security
      JWT_SECRET: "n8n-pro-jwt-secret-change-in-production-very-long-and-secure"
      ENCRYPTION_KEY: "n8n-pro-encryption-key-32-characters"
      
      # Metrics
      METRICS_ENABLED: true
      METRICS_HOST: 0.0.0.0
      METRICS_PORT: 9090
      
      # Features
      FEATURE_WORKFLOW_VERSIONING: true
      FEATURE_WORKFLOW_TEMPLATES: true
      FEATURE_TEAM_COLLABORATION: true
    volumes:
      - ./storage:/app/storage
    networks:
      - n8n-pro-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.worker
    container_name: n8n-pro-worker
    restart: unless-stopped
    ports:
      - "8082:8082"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Application
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: info
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: n8n_clone
      DB_USER: user
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DATABASE: 0
      
      # Kafka
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: n8n-workflows
      KAFKA_GROUP_ID: n8n-workers
      
      # Worker
      WORKER_ENABLED: true
      WORKER_CONCURRENCY: 10
      WORKER_HEALTH_CHECK_PORT: 8082
      
      # Sandbox
      SANDBOX_ENABLED: true
      SANDBOX_MAX_CONCURRENT_JOBS: 5
      SANDBOX_MAX_MEMORY_MB: 128
      
      # Security
      JWT_SECRET: "n8n-pro-jwt-secret-change-in-production-very-long-and-secure"
      ENCRYPTION_KEY: "n8n-pro-encryption-key-32-characters"
    volumes:
      - ./storage:/app/storage
    networks:
      - n8n-pro-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Scheduler Service
  scheduler:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.scheduler
    container_name: n8n-pro-scheduler
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Application
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: info
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: n8n_clone
      DB_USER: user
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DATABASE: 0
      
      # Kafka
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: n8n-workflows
      KAFKA_GROUP_ID: n8n-schedulers
      
      # Scheduler
      SCHEDULER_ENABLED: true
      SCHEDULER_CHECK_INTERVAL: 30s
      SCHEDULER_MAX_CONCURRENT_JOBS: 10
      
      # Security
      JWT_SECRET: "n8n-pro-jwt-secret-change-in-production-very-long-and-secure"
      ENCRYPTION_KEY: "n8n-pro-encryption-key-32-characters"
    networks:
      - n8n-pro-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Webhook Service
  webhook:
    build:
      context: .
      dockerfile: deployments/docker/Dockerfile.webhook
    container_name: n8n-pro-webhook
    restart: unless-stopped
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      # Application
      ENVIRONMENT: production
      DEBUG: false
      LOG_LEVEL: info
      
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: n8n_clone
      DB_USER: user
      DB_PASSWORD: password
      DB_SSL_MODE: disable
      
      # Redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redis_password
      REDIS_DATABASE: 0
      
      # Kafka
      KAFKA_BROKERS: kafka:9092
      KAFKA_TOPIC: n8n-workflows
      KAFKA_GROUP_ID: n8n-webhooks
      
      # Webhook
      WEBHOOK_ENABLED: true
      WEBHOOK_HOST: 0.0.0.0
      WEBHOOK_PORT: 8081
      WEBHOOK_MAX_PAYLOAD_SIZE: 10485760
      
      # Security
      JWT_SECRET: "n8n-pro-jwt-secret-change-in-production-very-long-and-secure"
      ENCRYPTION_KEY: "n8n-pro-encryption-key-32-characters"
    volumes:
      - ./storage:/app/storage
    networks:
      - n8n-pro-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

# Named volumes for data persistence
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local
